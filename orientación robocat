long distancia;
long tiempo;

void setup(){
  Serial.begin(9600);
  pinMode(7, OUTPUT); /*activación del pin 9 como salida: para el pulso ultrasónico*/
  pinMode(6, INPUT); /*activación del pin 8 como entrada: tiempo del rebote del ultrasonido*/
  //LED
  pinMode(2, OUTPUT);
  //Movimiento del coche
   Serial.begin (9600);

void leyendo_sensor_distancia (void);
void lecturas_sensor_blanco_negro (void);
}

void loop(){
  
  leyendo_sensor_distancia ();
  lecturas_sensor_blanco_negro ();
 //comienzo del programa de orientación
 
 do { girar sentido horario }
 while (distancia > 50);
 parar
 
 do { girar sentido horario }
 while (distancia > 50);
 gira 90º en sentido horario
 
 if (distancia >100)
 {gira 180º en sentido horario}
 
 //comienzo del programa de cargar bolas de forma manual
 
 



  //do {
    // girar hacia la derecha 
    //}

  //while ( distancia < 50 )
  // para gira 90 
  // if (distancia>70)
  //girar 180 
  // else if (distancia < 70 )


}

void leyendo_sensor_distancia (){

  digitalWrite(7,LOW); /* Por cuestión de estabilización del sensor*/
  delayMicroseconds(5);
  digitalWrite(7, HIGH); /* envío del pulso ultrasónico*/
  delayMicroseconds(10);
  tiempo=pulseIn(6, HIGH); /* Función para medir la longitud del pulso entrante. Mide el tiempo que transcurrido entre el envío
  del pulso ultrasónico y cuando el sensor recibe el rebote, es decir: desde que el pin 8 empieza a recibir el rebote, HIGH, hasta que
  deja de hacerlo, LOW, la longitud del pulso entrante*/
  distancia= int(0.017*tiempo); /*fórmula para calcular la distancia obteniendo un valor entero*/
  /*Monitorización en centímetros por el monitor serial*/

  Serial.println("Distancia ");
  Serial.println(distancia);
  Serial.println(" cm");
  delay(500);

}

void lecturas_sensor_blanco_negro () {








